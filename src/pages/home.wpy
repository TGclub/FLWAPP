<style lang="scss" type="text/scss">

</style>

<template>
	<view>
		<Loader></Loader>
		<Swiper :BannerDatas.sync="BannerDatas"/>
		<News :NewsDatas.sync="NewsDatas" :FlowerRankDatas.sync="FlowerRankDatas"/>
		<Bar :role.sync="role"/>
	</view>
</template>

<script>
	import moment from 'moment'
	import page from './base/basicPage'
	import News from '../components/home/News'
	import Swiper from '../components/home/Swiper'
	import Bar from '../components/home/bar'
	import loader from '../components/Dialogs/loader'

	export default class home extends page {
		config = {
			enablePullDownRefresh: true,
			navigationBarTitleText: '首页'
		}
		components = {
			Swiper: Swiper,
			News: News,
			Bar: Bar,
			Loader: loader
		}
		data = {
			NewsDatas: [],
			FlowerRankDatas: [],
			tradeList: [],
			BannerDatas: [],
			page: 0,
			isLastPage: false,
			role: 0
		}
		computed = {}

		GetNewsDatas (data) {
			moment.locale('zh-cn')
			if (typeof data !== 'undefined' && data.length > 0) {
				data.map(item => {
					if (parseInt(item.tag) === parseInt(item.tag)) {
						if (item.tag === -1) {
							item.tag = '未知'
						} else {
							try {
								item.tag = this.tradeList.filter(tradeItem => tradeItem.id === parseInt(item.tag))[0].tradeName
							} catch (e) {
								item.tag = '未知'
							}
						}
					}
					let imgUrl = '../static/images/logo.png'
					let imageList = item.content.split(' ').filter(item => item.indexOf('src', 0) === 0).map(item => item.slice(item.indexOf('http', 0), item.length - 1))
					if (imageList.length > 0) {
						imgUrl = imageList[0]
					}
					this.NewsDatas.push(
						{
							id: item.id,
							title: item.title,
							author: item.name || '匿名',
							pageView: item.pageView || '1',
							time: moment(item.createTime.split('.')[0], 'YYYY-MM-DD hh:mm:ss').fromNow() || '',
							tag: item.tag,
							imgUrl: imgUrl
						}
					)
				})
			}
		}

		GetBannerDatas (data) {
			data.map(item => {
				this.BannerDatas.push({
					imgSrc: item['a'],
					title: item['c'] || '海鲸教育基金会',
					id: item['b']
				})
			})
		}

		GetFlowerRankDatas (data) {
			const avatarList = []
			data.map(item => {
				avatarList.push(item.userId)
				this.FlowerRankDatas.push({
					tutorName: item.tutorName || '神秘导师' + item.userId,
					giftFlowerNum: item.giftFlowerNum,
					userId: item.userId
				})
			})
		}

		onLoad () {
//			this.$WX.showLoading()
			this.$API('GetTrade')
				.then(res => {
					this.tradeList = res.data
					return this.$API('GetNewsList', {page: this.page})
				})
				.then(res => {
					this.role = this.$WX.getStorage('role') // 首次获取role
					this.page++
					this.GetNewsDatas(res.data)
					return this.$API('GetBanner')
				})
				.then(res => {
					this.GetBannerDatas(res.data)
					/* DEV 目前改为 自定义加载动画 */
					this.$broadcast('loader-close')
					//					this.$WX.hideLoading()
					this.$apply()
				})
		}
		onShow () {
			this.role = this.$WX.getStorage('role')
			wx.openBluetoothAdapter({
				success: function (res) {
					console.log(res)
				}
			})
			this.FlowerRankDatas = []
			this.$API('GetFlowerRank')
				.then(res => {
					this.GetFlowerRankDatas(res.data)
							this.$apply()
				})
		}
		onPullDownRefresh () {
			console.log('下拉刷新')
			this.NewsDatas = []
			this.FlowerRankDatas = []
			this.page = 0
			this.$API('GetNewsList', {page: 0})
				.then(res => {
					this.page++
					this.GetNewsDatas(res.data)
					return this.$API('GetFlowerRank')
				})
				.then(res => {
					this.GetFlowerRankDatas(res.data)
					this.$apply()
					return this.$API('GetBanner')
				})
				.then(res => {
					this.GetBannerDatas(res.data)
					setTimeout(() => {
						wx.stopPullDownRefresh()
					}, 500)
					this.$apply()
				})
		}
		onReachBottom () {
			console.log('上拉加载', this.page)
			if (!this.isLastPage) {
				this.$API('GetNewsList', {page: this.page})
					.then(res => {
						if (res.data.length !== 0) {
							this.isLastPage = false
							this.page++
							this.GetNewsDatas(res.data)
						} else if (res.data.length === 0) {
							this.isLastPage = true
						}
					})
			}
		}
		methods = {}
		events = {
			'jumpToArticle': (key) => {
				this.$WX.setStorage('articleId', key)
				this.$WX.jumpTo('./article')
			},
			'jumpToTutorPage': (key) => {
				if (this.$WX.getStorage('role') === 0) {
					this.$WX.interceptTourist()
				} else {
					this.$WX.setStorage('visit_userId', parseInt(key))
					this.$WX.setStorage('visit_role', 2)
					this.$WX.jumpTo('./user/personalPage')
				}
			},
			'BarClick': (key) => {
				if (key === 'student') {
					this.$WX.jumpTo('./writeArticle')
				} else if (key === 'tutor') {
						this.$WX.jumpTo('./user/topUp')
				}
			}
		}
		props = {}
	}
</script>
